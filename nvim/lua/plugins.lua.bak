local ensure_packer = function()
    local fn = vim.fn
    local install_path = fn.stdpath('data')..'/site/pack/packer/start/packer.nvim'
    if fn.empty(fn.glob(install_path)) > 0 then
        fn.system({'git', 'clone', '--depth', '1', 'https://github.com/wbthomason/packer.nvim', install_path})
        vim.cmd [[packadd packer.nvim]]
        return true
    end
    return false
    end


local packer_bootstrap = ensure_packer()


return require('packer').startup(function(use)
    use 'wbthomason/packer.nvim'
    -- my plugins here
    -- use 'foo1/bar1.nvim'
    -- use 'foo2/bar2.nvim'

    use {
        'numToStr/Comment.nvim',
        config = function()
            require('Comment').setup()
        end
    }

    use "christoomey/vim-tmux-navigator" -- 用ctl-hjkl来定位窗口
    use { 'nvim-treesitter/nvim-treesitter', run = ':TSUpdate' } -- 语法高亮
    use "p00f/nvim-ts-rainbow" -- 配合treesitter，不同括号颜色区分
    use {
        "williamboman/mason.nvim",
        "williamboman/mason-lspconfig.nvim",  -- 这个相当于mason.nvim和lspconfig的桥梁
        "neovim/nvim-lspconfig"
    }
    -- 自动补全
    use "hrsh7th/nvim-cmp"
    use "hrsh7th/cmp-nvim-lsp"
    use "L3MON4D3/LuaSnip" -- snippets引擎，不装这个自动补全会出问题
    use "saadparwaiz1/cmp_luasnip"
    use "rafamadriz/friendly-snippets"
    use "hrsh7th/cmp-path" -- 文件路径

    use "windwp/nvim-autopairs" -- 自动补全括号

    use "akinsho/bufferline.nvim" -- buffer分割线
    use "lewis6991/gitsigns.nvim" -- 左则git提示
    use "p00f/nvim-ts-rainbow" -- 配合treesitter，不同括号颜色区分   
    use {
      'nvim-telescope/telescope.nvim', tag = '0.1.1', -- 文件搜索
    -- or                            , branch = '0.1.x',
      requires = { {'nvim-lua/plenary.nvim'} }
    }
    use 'folke/tokyonight.nvim'     -- 主题
    use 'nvim-lualine/lualine.nvim'  -- 状态栏
    use 'kyazdani42/nvim-tree.lua'    -- 树
    use 'kyazdani42/nvim-web-devicons'   -- 图标
    
    use "lukas-reineke/indent-blankline.nvim" -- 缩进线
    -- Automatically set up your configuration after cloning packer.nvim
    -- Put this at the end after all plugins
    if packer_bootstrap then
        require('packer').sync()
    end
end)
